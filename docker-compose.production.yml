# üöÄ QA ToolBox Production Docker Compose

version: '3.8'

services:
  # PostgreSQLÊï∞ÊçÆÂ∫ì
  postgres:
    image: postgres:15-alpine
    container_name: qatoolbox-postgres
    environment:
      POSTGRES_DB: qatoolbox_production
      POSTGRES_USER: qatoolbox
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_here}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - qatoolbox-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qatoolbox -d qatoolbox_production"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RedisÁºìÂ≠ò
  redis:
    image: redis:7-alpine
    container_name: qatoolbox-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-secure_redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - qatoolbox-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # GoÂêéÁ´ØÊúçÂä°
  backend:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: qatoolbox-backend
    environment:
      - DATABASE_URL=postgres://qatoolbox:${POSTGRES_PASSWORD:-secure_password_here}@postgres:5432/qatoolbox_production?sslmode=disable
      - REDIS_URL=redis://:${REDIS_PASSWORD:-secure_redis_password}@redis:6379/0
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - GIN_MODE=release
    ports:
      - "8080:8080"
    networks:
      - qatoolbox-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NginxÂèçÂêë‰ª£ÁêÜ
  nginx:
    image: nginx:alpine
    container_name: qatoolbox-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - qatoolbox-network
    depends_on:
      - backend
    restart: unless-stopped

  # Flutter WebÂ∫îÁî® - QA ToolBox Pro
  qa-toolbox-web:
    image: nginx:alpine
    container_name: qa-toolbox-web
    ports:
      - "3001:80"
    volumes:
      - ./qa_toolbox_pro/build/web:/usr/share/nginx/html
    networks:
      - qatoolbox-network
    restart: unless-stopped

  # Flutter WebÂ∫îÁî® - LifeMode
  life-mode-web:
    image: nginx:alpine
    container_name: life-mode-web
    ports:
      - "3002:80"
    volumes:
      - ./life_mode/build/web:/usr/share/nginx/html
    networks:
      - qatoolbox-network
    restart: unless-stopped

  # Flutter WebÂ∫îÁî® - FitTracker
  fit-tracker-web:
    image: nginx:alpine
    container_name: fit-tracker-web
    ports:
      - "3003:80"
    volumes:
      - ./fit_tracker/build/web:/usr/share/nginx/html
    networks:
      - qatoolbox-network
    restart: unless-stopped

  # Flutter WebÂ∫îÁî® - SocialHub
  social-hub-web:
    image: nginx:alpine
    container_name: social-hub-web
    ports:
      - "3004:80"
    volumes:
      - ./social_hub/build/web:/usr/share/nginx/html
    networks:
      - qatoolbox-network
    restart: unless-stopped

  # Flutter WebÂ∫îÁî® - CreativeStudio
  creative-studio-web:
    image: nginx:alpine
    container_name: creative-studio-web
    ports:
      - "3005:80"
    volumes:
      - ./creative_studio/build/web:/usr/share/nginx/html
    networks:
      - qatoolbox-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  qatoolbox-network:
    driver: bridge
